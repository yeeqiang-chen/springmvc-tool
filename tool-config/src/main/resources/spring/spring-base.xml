<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     					http://www.springframework.org/schema/tx 
     					http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     					http://www.springframework.org/schema/aop
     					http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     					http://www.springframework.org/schema/context 
     					http://www.springframework.org/schema/context/spring-context-3.0.xsd 
     					http://www.springframework.org/schema/mvc 
     http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
     
    <context:annotation-config />
	<tx:annotation-driven />
	<aop:aspectj-autoproxy />
     
    <!-- 国际化资源文件读取 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:properties/messages" />
	</bean>
	<!-- 多语言拦截器 -->
	<bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />

	<!-- 基于session的多语言 -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	<!-- 多语言配置 end -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- 适配器 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- http message converter -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 扫描注解 bean -->
	<context:component-scan base-package="com.xxx.dao" />
	<context:component-scan base-package="com.xxx.service" />
	<context:component-scan base-package="com.xxx.controller" />
	<context:component-scan base-package="com.security" />
	<context:component-scan base-package="com.authority" />
	<context:component-scan base-package="com.aop" />
	<!-- mcs模块 -->
	<context:component-scan base-package="org.yyy.dao" />
	<context:component-scan base-package="org.yyy.service" />
	<context:component-scan base-package="org.yyy.controller" />
	<context:component-scan base-package="org.yyy.api.rest" />
	
	<!-- 声明式事务管理 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- Spring AOP config -->
	<aop:config>
		<aop:advisor pointcut="( execution(* com.xxx.service.*.I*Service.*(..))
		|| execution(* com.xxx.service.ICommonService.*(..)) || execution(* org.yyy.service.*.I*Service.*(..)))"
			advice-ref="myAdvice" />
	</aop:config>

	<!-- 事务通知 -->
	<tx:advice id="myAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="activiti*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<mvc:resources mapping="/assets/css/**" location="/assets/css/" />
	<mvc:resources mapping="/assets/images/**" location="/assets/images/" />
	<mvc:resources mapping="/assets/js/**" location="/assets/js/" />
	
	<!-- session失效拦截 -->
	 <mvc:interceptors>
			<bean class="com.security.SessionInterceptor"></bean>
	</mvc:interceptors>
</beans>
